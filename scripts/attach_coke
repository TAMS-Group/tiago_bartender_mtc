#!/usr/bin/env python

from __future__ import print_function

import rospy
import actionlib
import sys

import moveit_commander

import moveit_msgs
import moveit_msgs.srv
from moveit_msgs.msg import AttachedCollisionObject

if __name__ == '__main__':
    rospy.init_node('test_place')

    psi = moveit_commander.PlanningSceneInterface()

    objects = psi.get_objects(['coke'])

    if 'coke' in objects:

        coke = objects['coke']

        coke.header.frame_id = 'gripper_grasping_frame'

        #position:
        coke.mesh_poses[0].position.x= 0.0400010058131
        coke.mesh_poses[0].position.y= -4.82334757135e-08
        coke.mesh_poses[0].position.z= -0.00750040063694
        #orientation: 
        coke.mesh_poses[0].orientation.x= -0.382682828207
        coke.mesh_poses[0].orientation.y= -0.923879782758
        coke.mesh_poses[0].orientation.z= 1.24594556363e-06
        coke.mesh_poses[0].orientation.w= 2.39426973773e-06
        #coke.mesh_poses[0].orientation.w= 1.0	

        aco = AttachedCollisionObject()
        aco.link_name = 'gripper_grasping_frame'
        aco.object = coke

        scene = moveit_msgs.msg.PlanningScene()
        scene.is_diff = True
        scene.robot_state.is_diff = True
        scene.robot_state.attached_collision_objects.append(aco)
        apply_planning_scene = rospy.ServiceProxy("apply_planning_scene", moveit_msgs.srv.ApplyPlanningScene)
        rs = apply_planning_scene.call(scene)
        print(rs)
    elif 'coke' in psi.get_attached_objects(['coke']):
        print('coke already attached')
    else:
        print('coke object not found')
